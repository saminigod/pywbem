PYWBEM A Pure Python WBEM Client
--------------------------------

.. PyPI download statistics are broken, but the new PyPI warehouse makes PyPI
.. download statistics available through Google BigQuery
.. (https://bigquery.cloud.google.com).
.. Query to list package downloads by version:
..
   SELECT
     file.project,
     file.version,
     COUNT(*) as total_downloads,
     SUM(CASE WHEN REGEXP_EXTRACT(details.python, r"^([^\.]+\.[^\.]+)") = "2.6" THEN 1 ELSE 0 END) as py26_downloads,
     SUM(CASE WHEN REGEXP_EXTRACT(details.python, r"^([^\.]+\.[^\.]+)") = "2.7" THEN 1 ELSE 0 END) as py27_downloads,
     SUM(CASE WHEN REGEXP_EXTRACT(details.python, r"^([^\.]+)\.[^\.]+") = "3" THEN 1 ELSE 0 END) as py3_downloads,
   FROM
     TABLE_DATE_RANGE(
       [the-psf:pypi.downloads],
       TIMESTAMP("19700101"),
       CURRENT_TIMESTAMP()
     )
   WHERE
     file.project = 'pywbem'
   GROUP BY
     file.project, file.version
   ORDER BY
     file.version DESC

.. image:: https://img.shields.io/pypi/v/pywbem.svg
    :target: https://pypi.python.org/pypi/pywbem/
    :alt: Version on Pypi

.. # .. image:: https://img.shields.io/pypi/dm/pywbem.svg
.. #     :target: https://pypi.python.org/pypi/pywbem/
.. #     :alt: Pypi downloads

.. image:: https://travis-ci.org/pywbem/pywbem.svg?branch=master
    :target: https://travis-ci.org/pywbem/pywbem
    :alt: Travis test status (master)

.. image:: https://ci.appveyor.com/api/projects/status/i022iaeu3dao8j5x/branch/master?svg=true
    :target: https://ci.appveyor.com/project/leopoldjuergen/pywbem
    :alt: Appveyor test status (master)

.. image:: https://readthedocs.org/projects/pywbem/badge/?version=latest
    :target: http://pywbem.readthedocs.io/en/latest/
    :alt: Docs build status (latest)

.. image:: https://img.shields.io/coveralls/pywbem/pywbem.svg
    :target: https://coveralls.io/r/pywbem/pywbem
    :alt: Test coverage (master)

.. contents:: Contents:
   :local:

Overview
-------------------------

Pywbem is a WBEM client and WBEM Indication Listener, written in pure Python.
It runs on Python 2 and Python 3.

A WBEM client allows issuing operations to a WBEM server, using the CIM
operations over HTTP (CIM-XML) protocol defined in the DMTF standards DSP0200
and DSP0201. The CIM/WBEM infrastructure is used for a wide variety of systems
management tasks supported by systems running WBEM servers. See
[WBEM Standards](http://www.dmtf.org/standards/wbem) for more information about
WBEM.

A WBEM Indication Listener allows receiving indications generated by
WBEMSubscriptions provided to a WBEMServer.

A Subscription Manager provides APIs for view of indication subscriptions on
a WBEM Server and for management of those subscriptions (creation and
deletion)

A WBEMServer class providesaccess provides access for  managing basic
characteristics of the WBEM server including:

* finding namespaces and the interop namespace
* finding profiles
* finding basic information about the WBEM Server.

The major components of pywbem are as shown in this diagram:

.. image:: images/pywbemcomponents.png
    :width: 400px
    :align: right
    :height: 250px
    :alt: alternate text

Installation
------------

For rapid installation use pip:

.. code-block:: bash

    $pip install pywbem

    
For more details and alternative ways to install, see the
`Installation section`_ in the pywbem documentation.

.. _Installation section: http://pywbem.readthedocs.io/en/stable/intro.html#installation


Usage
-----

For information on how to use pywbem, or how to contribute to it, go to the
`pywbem documentation`_ .

.. _pywbem documentation: http://pywbem.readthedocs.io/en/stable/intro.html#

Documentation
-------------

There is pywbem api documentation, user documentation, tutorial documentation,
and developer documentation at the `pywbem documentation`_ web page.

This includes a number of Jupyter/ipython notebooks that  act as a `pywbem tutorial`_
and provide working examples of pywbem API usage.

.. _pywbem tutorial: http://pywbem.readthedocs.io/en/stable/tutorial.html#

Command Line Tools
------------------

Pywbem includes two command line tools:

1. `wbemcli` - An interactive shell for issuing operations against a WBEM
server.  In addition to executing the pywbem WBEM requests directly, simple
scripts can be created to execute be executed by wbemcli.  

2. `mof_comp` - A command line interface to the pywbem mof compiler to compile
mof into WBEM Servers.

QuickStart
----------

The following simple example script lists the namespaces and the interop
namespace in a particular WBEM Server:

.. code-block:: python

    #!/usr/bin/env python

    import pywbem

    server_uri = http://localhost
    user = 'fred'
    password = 'blah'

    conn = pywbem.WBEMConnection(server_uri,
                          (user, password),
                          default_namespace=namespace)

    server = pywbem.WBEMServer(conn)

    print("Interop namespace:\n  %s" % server.interop_ns)

    print("All namespaces:")
    for ns in server.namespaces:
        print("  %s" % ns) 


Project Planing
---------------

**Version 0.11.0** - Next version to come. See the issues for milestone 0.11.0
for current planning for this release. The release date is Q1 2017.

For each new release in planning, the issues planned for that release are
documented in the pywbem github issues section of this github repository and
there is an issue that sets out the major goals for that release.

License
-------

Pywbem is provided under the
[GNU Lesser General Public License (LGPL) version 2.1](src/pywbem/LICENSE.txt),
or (at your option) any later version.
